{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"About","text":""},{"location":"about/#welcome-to-infotechtutorials","title":"Welcome to InfoTechTutorials","text":"<p>Here we strive to create to provide the best documentation for all of your homelab projects</p>"},{"location":"HomeLab/Linux_Projects/Debian_12/","title":"Installing Debian 12","text":""},{"location":"HomeLab/Linux_Projects/Debian_12/#installing-debian-12-machine","title":"Installing Debian 12 Machine","text":"<p>First thing you're going to want to do is grab the ISO from the following location:</p> <p>Download Debian ISO</p>"},{"location":"HomeLab/Linux_Projects/dhcp/","title":"This is my documentation for setting up a DHCP Server","text":"<p>Follow it</p>"},{"location":"HomeLab/Windows_Projects/","title":"Welcome to the World of Windows Server","text":"<p>If you've been a using Windows as your main desktop for a long time you might have at some point come across the term Windows Server. If you didn't bother looking it up at the time I will tell you now. Windows Server is an operation system that is feature rich and is specifically designed to provide servers in networking, storage, authentication and users.</p> <p>Windows Server OS plays a crucial role in managing the back-end infrastructure of companies, providing server-based computing solutions for file storage, email services, web hosting, and more.</p>"},{"location":"HomeLab/Windows_Projects/#key-characteristics-of-windows-server-os","title":"Key Characteristics of Windows Server OS:","text":"<p>Server Roles and Services:</p> <ul> <li>Active Directory (AD): A directory service used for managing domain-based networks. It helps in organizing users, computers, and other resources into a centralized system.</li> <li>DNS (Domain Name System): Provides hostname resolution services, converting domain names to IP addresses and vice versa.</li> <li>DHCP (Dynamic Host Configuration Protocol): Dynamically assigns IP addresses to devices on a network, simplifying network management.</li> <li>File and Storage Services: Manages file sharing and storage across a network, including features like Distributed File System (DFS) for sharing across multiple servers.</li> <li>Web Hosting (IIS - Internet Information Services): Hosts websites and web applications. IIS is Microsoft\u2019s web server role included in Windows Server.</li> <li>Hyper-V: Windows Server's virtualization platform, allowing users to create and manage virtual machines (VMs).</li> </ul>"},{"location":"HomeLab/Windows_Projects/#scalability-and-performance","title":"Scalability and Performance:","text":"<ul> <li>High Performance: Windows Server OS is built to support enterprise-level workloads, with support for thousands of users, large amounts of memory (RAM), and multiple processors.</li> <li>Cluster Support: Provides failover clustering for high availability, allowing servers to remain online even if individual components fail.</li> </ul>"},{"location":"HomeLab/Windows_Projects/#security","title":"Security:","text":"<ul> <li>Advanced Threat Protection: Built-in tools like Windows Defender Advanced Threat Protection (ATP) protect against malware, ransomware, and other security threats.</li> <li>Firewall and Network Protection: Configurable firewalls and network isolation features to protect servers from unauthorized access.</li> <li>Just Enough Administration (JEA) and Just-in-Time Administration (JIT): Role-based access controls to limit who can perform certain administrative tasks.</li> </ul>"},{"location":"HomeLab/Windows_Projects/#management-tools","title":"Management Tools:","text":"<ul> <li>Windows Admin Center: A modern, browser-based management tool for managing multiple servers, clusters, and hyper-converged infrastructure (HCI).</li> <li>PowerShell: A command-line and scripting tool that allows for automation and management of server configurations and operations.</li> <li>Group Policy: Allows centralized management of users and computers in a network, controlling security settings, software installations, and more.</li> </ul>"},{"location":"HomeLab/Windows_Projects/#-virtualization-and-cloud-integration","title":"- Virtualization and Cloud Integration:","text":"<ul> <li>Hyper-V: As a built-in hypervisor, Hyper-V allows you to run virtual machines and containers efficiently. It is essential for consolidating hardware and running multiple environments on a single physical server.</li> <li>Hybrid Cloud Support: Integration with Microsoft Azure services, allowing for hybrid cloud setups, where parts of the infrastructure are hosted in the cloud while others remain on-premises.</li> </ul>"},{"location":"HomeLab/Windows_Projects/#different-editions-windows-server-is-released-in-different-editions-to-cater-to-businesses-of-various-sizes","title":"Different Editions: Windows Server is released in different editions to cater to businesses of various sizes:","text":"<ul> <li>Standard Edition: Suited for small to medium-sized businesses that require basic features like file sharing, application hosting, and virtualization (limited to two virtual machines).</li> <li>Datacenter Edition: Designed for larger enterprises with heavy virtualization and cloud integration needs, allowing unlimited virtual machines.</li> <li>Essentials Edition: Targeted at small businesses with fewer users (up to 25 users and 50 devices), offering simplified management and limited features.</li> </ul>"},{"location":"HomeLab/Windows_Projects/#common-use-cases","title":"Common Use Cases:","text":"<ul> <li>Domain Controller: Hosts Active Directory, managing authentication and authorization across a network.</li> <li>File Server: Provides centralized storage for users and systems in an organization, facilitating file sharing and backup.</li> <li>Web and Application Hosting: Hosts websites, web applications, and databases.</li> <li>Virtualization: Manages virtual machines using Hyper-V to run multiple operating systems on the same hardware.</li> <li>Email and Collaboration: Provides back-end services like email hosting (Exchange Server) and collaboration tools (SharePoint).</li> <li>Hybrid Cloud Services: Integrates on-premise servers with cloud services using Azure.</li> </ul>"},{"location":"HomeLab/Windows_Projects/#the-history-of-windows-server","title":"The History of Windows Server","text":""},{"location":"HomeLab/Windows_Projects/#windows-nt-31-advanced-server-1993","title":"Windows NT 3.1 Advanced Server (1993)","text":"<p>Overview: Microsoft's first true server operating system. It was based on the Windows NT (New Technology) platform and marked Microsoft\u2019s entry into the server market.</p> <p>Key Features: Focused on file, print, and application services with basic networking capabilities. It was designed to work in small networks.</p>"},{"location":"HomeLab/Windows_Projects/#windows-nt-35-server-1994","title":"Windows NT 3.5 Server (1994)","text":"<p>Overview: This version improved upon NT 3.1, focusing on better performance, networking, and security.</p> <p>Key Features: Introduction of support for domain controllers, NTFS file system enhancements, and better networking features.</p>"},{"location":"HomeLab/Windows_Projects/#windows-nt-40-server-1996","title":"Windows NT 4.0 Server (1996)","text":"<p>Overview: A significant update with a user interface similar to Windows 95, bringing a more user-friendly experience to server environments.</p> <p>Key Features: Active Directory wasn\u2019t yet introduced, but it provided better networking capabilities, including DHCP, DNS, and WINS services. This version is often credited with helping Microsoft gain a stronger foothold in the server market.</p>"},{"location":"HomeLab/Windows_Projects/#windows-2000-server-2000","title":"Windows 2000 Server (2000)","text":"<p>Overview: A major shift for Microsoft servers, this version introduced the Active Directory service, which allowed centralized domain management and became a cornerstone of network administration.</p> <p>Key Features:</p> <ul> <li>Active Directory for domain services</li> <li>Distributed File System (DFS) and the File Replication Service (FRS)</li> <li>Enhanced security features</li> <li>Support for up to 32 processors and 64 GB of RAM</li> </ul>"},{"location":"HomeLab/Windows_Projects/#windows-server-2003-2003","title":"Windows Server 2003 (2003)","text":"<p>Overview: The first server OS to officially carry the \u201cWindows Server\u201d branding, based on the Windows XP codebase.</p> <p>Key Features:</p> <ul> <li>Improved Active Directory</li> <li>New Volume Shadow Copy feature for backups</li> <li>Better scalability and performance</li> <li>Windows Server Update Services (WSUS) for automatic updates</li> <li>Roles and features like DNS, DHCP, IIS (Internet Information Services) were easier to manage</li> <li> <p>There were several editions of Windows Server 2003:</p> </li> <li> <p>Web Edition (for hosting websites and web applications)</p> </li> <li>Standard Edition (for small to medium-sized businesses)</li> <li>Enterprise Edition (for larger businesses with high availability needs)</li> <li>Datacenter Edition (for large-scale enterprise environments)</li> </ul>"},{"location":"HomeLab/Windows_Projects/#windows-server-2008-2008","title":"Windows Server 2008 (2008)","text":"<p>Overview: Built on the same codebase as Windows Vista, Windows Server 2008 introduced several new management and virtualization features.</p> <p>Key Features:</p> <ul> <li>Server Core: A minimal installation option without the GUI, reducing the attack surface</li> <li>Introduction of Hyper-V for virtualization</li> <li>PowerShell for command-line automation</li> <li>Network Access Protection (NAP) to enforce health policies</li> <li>Failover Clustering for high availability</li> <li>Enhanced Active Directory roles like AD Federation Services</li> </ul>"},{"location":"HomeLab/Windows_Projects/#windows-server-2008-r2-2009","title":"Windows Server 2008 R2 (2009)","text":"<p>Overview: A significant update to Server 2008, built on the same core as Windows 7.</p> <p>Key Features:</p> <ul> <li>Live Migration with Hyper-V for seamless virtual machine transfers</li> <li>DirectAccess for seamless remote access without VPNs</li> <li>BranchCache to improve access to remote files</li> <li>Scalability improvements and better power management</li> </ul>"},{"location":"HomeLab/Windows_Projects/#windows-server-2012-2012","title":"Windows Server 2012 (2012)","text":"<p>Overview: This version introduced a major shift in server management with a greater focus on cloud integration and virtualization.</p> <p>Key Features:</p> <ul> <li>Hyper-V 3.0: Enhanced capabilities for virtualization and storage management</li> <li>Storage Spaces for creating virtual storage pools</li> <li>Resilient File System (ReFS) for improved data integrity</li> <li>Dynamic Access Control for better control over file access</li> <li>PowerShell 3.0 for advanced automation and management</li> <li>Emphasis on Server Core and Minimal Interface for headless management</li> </ul>"},{"location":"HomeLab/Windows_Projects/#windows-server-2012-r2-2013","title":"Windows Server 2012 R2 (2013)","text":"<p>Overview: An iterative improvement over Windows Server 2012, adding further cloud integration and refinements.</p> <p>Key Features:</p> <ul> <li>Enhanced Hyper-V features, including Generation 2 VMs</li> <li>Improved storage features like Storage Tiering and Deduplication</li> <li>Enhanced PowerShell with additional cmdlets</li> <li>Integration with Microsoft Azure for hybrid cloud scenarios</li> </ul>"},{"location":"HomeLab/Windows_Projects/#windows-server-2016-2016","title":"Windows Server 2016 (2016)","text":"<p>Overview: This version was designed to support hybrid cloud environments and introduced several new features aimed at improving security, containers, and virtualization.</p> <p>Key Features:</p> <ul> <li>Nano Server: A lightweight installation option for cloud and containerized workloads</li> <li>Windows Containers and Hyper-V Containers for containerization</li> <li>Shielded VMs for enhanced security in virtualized environments</li> <li>Storage Spaces Direct for hyper-converged infrastructure</li> <li>Just Enough Administration (JEA) and Just-In-Time Administration (JIT) for better access control</li> </ul>"},{"location":"HomeLab/Windows_Projects/#windows-server-2019-2018","title":"Windows Server 2019 (2018)","text":"<p>Overview: A continuation of Microsoft\u2019s focus on hybrid cloud environments, Windows Server 2019 included deeper integration with Azure.</p> <p>Key Features:</p> <ul> <li>Windows Admin Center for centralized management of on-premise and Azure services</li> <li>Improved Hyper-Converged Infrastructure (HCI)</li> <li>Azure Network Adapter for simplified cloud connectivity</li> <li>Windows Defender Advanced Threat Protection (ATP)</li> <li>Kubernetes support for Windows containers</li> </ul>"},{"location":"HomeLab/Windows_Projects/#windows-server-2022-2021","title":"Windows Server 2022 (2021)","text":"<p>Overview: The latest release as of 2021, Windows Server 2022 brings in enhanced security and cloud-native hybrid capabilities, with further refinements in containerization, storage, and networking.</p> <p>Key Features:</p> <ul> <li>Secured-Core Server for advanced security features</li> <li>TLS 1.3 by default for better security in network communications</li> <li>Hotpatching for applying security patches without rebooting in Azure environments</li> <li>Azure Arc for managing on-premise and multi-cloud servers</li> <li>Better container support for Windows Containers and improved performance</li> </ul>"},{"location":"HomeLab/Windows_Projects/Active_Directory/","title":"Active Directory","text":""},{"location":"HomeLab/Windows_Projects/Active_Directory/#active-directory","title":"Active Directory","text":""},{"location":"HomeLab/Windows_Projects/Project_Goals/","title":"Project Goals","text":""},{"location":"HomeLab/Windows_Projects/Project_Goals/#welcome-to-my-little-project-for-windows-server","title":"Welcome to my little project for Windows Server","text":"<p>My goal for this project is to explore the world of Microsoft Windows Server. See, what it can do and how it integrates with other systems out there. </p> <p>Firstly, let's get a few things out of the way. What is Windows Server? I go through this in more details in my Overview discussion. However, Windows Server is an operating system that's mainly targeted to Business and Enterprise customers. Unlike Microsoft Windows 8, 10 and 11 which is targeted towards consumers and users, Windows Server exist to server these operating System. Windows Server is unqiue in the idea that it can become something like a Domain Controller, File Server, VPN Server or a Remote Desktop Server. Sure you can install Jellyfin or something else on your Windows computer that makes it into a server but Windows Servers are specifically designed to carry out these roles. Windows Server comes pre-baked with all kinds of roles and features that you can use to accomplish a given task.</p> <p>My goal for this project is to somewhat re-educate myself on Windows Server and with the newly released Windows Server 2025, I think it's a great time to start. </p> <p>So before we get the our installation, let's get a few thing out of the way. What am I install Windows Server on and what does my networking looks like?</p> <p>So I'll be use VMWare ESXi as my host, but you can use any Virtualization platform you're comfortable with. VMWare Workstation, Virtualbox, Proxmox, XCP-NG etc.</p>"},{"location":"HomeLab/Windows_Projects/Project_Goals/#homelab-setup","title":"HomeLab Setup","text":"<p>My VMWare ESXi Server has the following resources:</p> <ul> <li>2 x Intel Xeon Gold 6118 - 24 Cores</li> <li>138GB RAM</li> <li>4 x 1TB SSD</li> </ul> <p>I'm able to build a few virtual machines using these resouces.</p> <p>I'll briefly go through how the networking is setup. My Gateway is my home router. It's a Mikrotik Router. It's currently setup in Bridge Mode so my public IP address is managed on my router. The OPNSense-Router there is actually a Virtual Machine on my ESXi Server. I choose to use another router because my Mikrotik Router handles all the routing for my personal devices, so I prefer to have a separate network for all of my Windows Server since some servers can be chatty. Also, I don't need to worry about conflicting IP addresses within my Networking, I can just freely assigned any IP address I choose to whichever server I feel will be best. Since I am double NAT, I will need to add a few networking rules here and there to ensure that I can communication back and forth between the 10.10.10.0/24 and the 192.168.100.0/24 network.</p> <p>If you're interested you can see how I setup my opnsense router here.</p> <p>My Mikrotik router has a few VLANs on it. 10.10.10.0/24 is my main VLAN that all of my personal devices are on, VLAN 1950 with the subnet: 192.168.50.0/24, it a test subnet that I use for testing different servers and devices that I don't want on my main network. Subnet: 192.168.100.0/254 will be the network all of my Windows Devices will exist on.</p> <p>This is what my networking looks like:</p> <p></p>"},{"location":"HomeLab/Windows_Projects/dc-01/","title":"What is Active Directory?","text":"<p>Okay, so at that the beginning of this project we talked about Windows Server and the roles they server in an On-prem Infrastructure. When you access something like google.com or Microsoft.com you are accessing a web-server that is providing a service. That web-server's job is to display the website for anyone that is accessing it. Let's say you wanted to self-host you own File Server, so you download a software called Nextcloud and you install it on a Linux Machine. The job of that Nextcloud server to ensure that you can share your files with your family and friends. </p> <p>Active Directory is directory service that is used to manage and store information about network resources like computers, users, services and devices, providing centralized administration and security for these resources. Active Directory has multiple components that it uses to manage these resources:</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#domain","title":"Domain:","text":"<ul> <li>A domain is a logical group of objects (such as users and computers) that share the same Active Directory database. Each domain has its own security policies and relationships with other domains. A Domain has an hierarchical structure to store objects.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#domain-controllersdcs","title":"Domain Controllers(DCs):","text":"<p>A Domain Controller is a server that host the Active Directory Domain Services role, You can think of it as a centralize location that all computers has to talk too.  Domain controllers are servers that store a copy of the Active Directory database and manage authentication and access to resources within the domain. They handle tasks like:</p> <ul> <li>User authentication (e.g., logging in to the network)</li> <li>Managing group policies</li> <li>Storing user, computer, and resource data</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#organizational-units-ous","title":"Organizational Units (OUs):","text":"<ul> <li>OUs are containers that organize users, computers, groups, and other OUs within a domain. They allow for delegation of administrative control and the application of group policies.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#active-directory-objects","title":"Active Directory Objects:","text":"<p>The main entities stored in Active Directory are objects, which include:</p> <ul> <li>Users: Individual accounts representing people who access the network.</li> <li>Computers: Machines that are joined to the domain.</li> <li>Groups: Collections of users, computers, or other resources that can be managed together.</li> <li>Printers and Shared Folders: Devices and directories shared across the network.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#trust","title":"Trust","text":"<ul> <li>Active Directory allows the creation of trust relationships between domains, enabling users from one domain to access resources in another domain. Trusts can be one-way or two-way.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#global-catalog-gc","title":"Global Catalog (GC):","text":"<ul> <li>The Global Catalog contains a partial, read-only copy of all objects in an Active Directory forest, allowing users and applications to search for resources across multiple domains.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#group-policy","title":"Group Policy:","text":"<ul> <li>Group Policy allows administrators to define settings and configurations for users and computers in the domain. These can include security settings, software deployment, and user environment customization.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#active-directory-roles","title":"Active Directory Roles:","text":"<p>Active Directory provides several server roles that can be assigned to domain controllers, such as:</p> <ul> <li>Schema Master: Controls updates and changes to the Active Directory schema.</li> <li>Domain Naming Master: Manages changes to the domain name space in the forest.</li> <li>PDC Emulator: Emulates a Windows NT primary domain controller (PDC) and handles password changes and time synchronization.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#use-cases-of-active-directory","title":"Use Cases of Active Directory:","text":"<ul> <li>Centralized user management: Admins can manage user accounts, passwords, and permissions from a single location.</li> <li>Resource access control: AD enables secure access to network resources such as shared files, printers, and applications.</li> <li>Security policies: Admins can enforce password policies, software restrictions, and desktop settings through Group Policy.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#installing-microsoft-active-directory","title":"Installing Microsoft Active Directory","text":"<p>Before we get into the installation, let's pause a bit and think about what we're doing. Currently we have a Windows Server called dc-01 and it's currently not really doing anything. If we want this server to serve a purpose we need to give it a role. For dc-01 the we're going to give it a role called a Active Directory Domain Server so it can become a Domain Controller. If you're planning on creating a new Windows Server Infrastructure, the Domain Controller is probably the most important and critical server in your Infrastructure and it's always the first server we should install unless you have a specific reason for not doing so.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#what-is-a-domain-controller","title":"What is a Domain Controller?","text":"<p>A Domain Controller (DC) is a server in a network that manages and controls security authentication requests, such as user logins, and enforces security policies within a Windows domain. It is a core component of Microsoft Active Directory (AD), which is a centralized directory service that provides management and configuration of resources, such as users, computers, printers, and security policies, within a domain.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#key-functions-of-a-domain-controller","title":"Key Functions of a Domain Controller:","text":"<ul> <li> <p>Authentication: The DC authenticates users, computers, and services within the domain. For example, when a user logs in to their computer, the DC verifies their credentials (username and password).</p> </li> <li> <p>Authorization: After authentication, the DC grants or denies access to resources (files, folders, printers, applications) based on the permissions and policies set by the administrators.</p> </li> <li> <p>Active Directory (AD) Management: The DC hosts a copy of the Active Directory database, which stores information about all domain objects (users, computers, groups, etc.) and their attributes.</p> </li> <li> <p>Group Policy Enforcement: Domain controllers enforce security policies and group policies across the network. Administrators can set rules for password complexity, account lockouts, or application restrictions centrally, and the DC ensures they are applied to all users and computers.</p> </li> <li> <p>Replication: In multi-DC environments, domain controllers replicate the Active Directory database to ensure that changes (like adding a new user or modifying security settings) are consistent across the network.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#domain-controller-in-a-windows-domain","title":"Domain Controller in a Windows Domain:","text":"<ul> <li> <p>Primary Domain Controller (PDC): Historically, there was a single PDC in older Windows Server environments, but now all domain controllers in modern Active Directory are considered peers.</p> </li> <li> <p>Read-Only Domain Controller (RODC): This is a type of domain controller that contains a read-only copy of the Active Directory database, often used in environments with lower security, such as branch offices.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#benefits-of-domain-controllers","title":"Benefits of Domain Controllers:","text":"<ul> <li> <p>Centralized management: Administrators can manage all users and resources from a single location, ensuring consistency across the network.</p> </li> <li> <p>Security: Policies can be enforced network-wide, providing strong control over access to resources.</p> </li> <li> <p>Scalability: Adding new users, computers, or other objects is simple and managed centrally.</p> </li> </ul> <p>I know that's a lot of words and if you're new to Microsoft Domains, you're probably not sure what any of that means, but not to worry. We will install our First Domain Controller here.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#perquisites-for-setting-up-your-domain-controller","title":"Perquisites for Setting up your Domain Controller","text":"<p>Prior to setting up your Domain Controller they are a few things you should probably have ready:</p> <ul> <li> <p>Static IP address - You'll definitely want your Domain Controller to have a IP address that doesn't change, this means you will have to manually assigned an IP address. I prefer this method over a DHCP reservation</p> </li> <li> <p>Assigned Computer Name - Ensure that you've renamed your computer and not leave it with the default name. In Production environments, I like to name my Servers after the role it's serving. So DC-01 will be my first Domain Controller, DC-02 will be my second Domain Controller, WFS-01 will be my first Windows File Server, VPN-01 will be my first Windows VPN server. You don't have to follow naming scheme, but ensure that you're able to tell what kind of server it is just by looking at the name.</p> </li> <li> <p>Domain Name - This is the most important decision you will make. What will you call your Domain. Most Admins will name their domain after their company, for example. Microsoft's domain will be called Microsoft.com, an insurance company named: Starlight insurance can call their domain, starlightinsurance.ca or starlightin.local. Notice that I have different top level domain (TLD) for example. .com, .ca. .local, .internal etc. These are all acceptable Top-Level Domains that you can use. </p> </li> </ul> <p>Before proceeding, I want to expand a bit more on the different Top-Level Domain. You can say that they are two types of TLD, you have an External TLD like .com, .ca, .org .edu or .net. Usually you will find these Top-Level Domains out on the internet but you also have a few internal Top-Level Domain like .local, .internal or .lan. </p> <p>So which one should you pick? an external TLD or an internal one?</p> <p>Here's a some information to help you make the choice:</p> <p>When setting up a domain for your Active Directory (AD) environment, choosing between an internal TLD (used only within the internal network) and an external TLD (which may be publicly available and used for external resources) comes with its own set of pros and cons. Your decision impacts DNS resolution, security, and compatibility with internal and external systems.</p> <p>Here\u2019s a breakdown of the pros and cons of using an internal TLD versus an external TLD for your Domain Controller.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#internal-tld","title":"Internal TLD","text":"<p>An internal TLD is a domain suffix that is not publicly registered or resolvable outside of your internal network. Examples include .internal, .lan, .corp, or custom internal domains like infotech.local.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#pros-of-internal-tld","title":"Pros of Internal TLD","text":""},{"location":"HomeLab/Windows_Projects/dc-01/#increased-security","title":"Increased Security:","text":"<ul> <li> <p>Internal resolution only: Internal TLDs aren\u2019t accessible or resolvable on the public internet, which reduces the attack surface for external threats.</p> </li> <li> <p>Data isolation: There\u2019s a clear separation between internal and external resources, reducing the risk of inadvertently exposing internal systems or sensitive data to the public. Simplicity in Name Management:</p> </li> <li> <p>No public domain conflicts: Since internal TLDs are not publicly registered, there's no concern about name collisions with public domains.</p> </li> <li> <p>Control over internal namespace: Administrators have full control over how the internal DNS is structured and managed without needing to consider external factors or domain registration processes.</p> </li> <li> <p>Flexibility: You can define internal domains without worrying about availability on the public internet. Custom or internal-only TLDs (like .internal or .lan) can be freely used for Active Directory without conflict.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#cons-of-internal-tld","title":"Cons of Internal TLD","text":""},{"location":"HomeLab/Windows_Projects/dc-01/#potential-for-future-conflicts","title":"Potential for Future Conflicts:","text":"<ul> <li>Some commonly used internal TLDs (like .corp or .local) may conflict with future public TLDs or technologies like mDNS (Multicast DNS), which reserves .local for use by devices such as Apple\u2019s Bonjour.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#limited-external-access","title":"Limited External Access:","text":"<ul> <li> <p>Internal TLDs are not accessible outside your network without complex configurations (e.g., VPN or split-brain DNS). This makes accessing internal resources from the internet more challenging.</p> </li> <li> <p>Compatibility Issues: Some internal-only TLDs may cause issues when integrating with external services or when using hybrid cloud environments (e.g., Microsoft Azure or Office 365), as these services expect publicly resolvable domain names.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#no-public-resolution","title":"No Public Resolution:","text":"<ul> <li> <p>If you need to resolve domain names externally (for remote workers, services in the cloud, etc.), you\u2019ll need to manage separate DNS entries for internal and external resources.</p> </li> <li> <p>External TLD: An external TLD refers to a publicly registered domain name (e.g., .com, .org, .net, or a country code TLD like .ca), which is accessible both internally and externally.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#pros-of-external-tld","title":"Pros of External TLD","text":""},{"location":"HomeLab/Windows_Projects/dc-01/#unified-namespace","title":"Unified Namespace:","text":"<ul> <li>Using the same TLD both internally and externally creates a single, consistent namespace. For example, if your external domain is infotech.ca, using the same domain internally (e.g., ad.infotech.ca) simplifies DNS management and provides a seamless experience for both internal and external users.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#easier-remote-access","title":"Easier Remote Access:","text":"<ul> <li>External TLDs are resolvable over the internet, which simplifies external access to internal resources (e.g., VPN, web services, remote workers) without needing separate DNS configurations for different environments.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#future-proof","title":"Future-Proof:","text":"<ul> <li>Using a registered external TLD ensures compatibility with future technologies, cloud services, and hybrid environments. Many external services (like Office 365 or Azure AD) expect publicly resolvable domain names, making it easier to integrate without renaming domains.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#public-and-internal-consistency","title":"Public and Internal Consistency:","text":"<ul> <li>A unified TLD (for both internal and external use) eliminates the need for split-brain DNS configurations, where different records are served to internal and external users. Cons of External TLD</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#potential-security-risks","title":"Potential Security Risks:","text":"<ul> <li>If external and internal resources share the same domain, there\u2019s a risk that internal resources may accidentally be exposed to the public internet if DNS or firewall configurations are mismanaged. Public exposure of the TLD could provide attackers with insight into your internal infrastructure.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#dns-complexity","title":"DNS Complexity:","text":"<ul> <li>Managing a publicly registered domain name requires careful planning for DNS zones and record separation. Internal resources should be kept isolated from external DNS servers, typically requiring split-horizon (split-brain) DNS.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#domain-registration-and-renewal-costs","title":"Domain Registration and Renewal Costs:","text":"<ul> <li> <p>Using an external TLD requires registering and maintaining a public domain, which incurs ongoing costs for domain renewal and DNS hosting. Confusion Between Internal and External Resources:</p> </li> <li> <p>If not properly configured, users (or systems) might access the external versions of services rather than internal ones, causing confusion, slower access times, or exposing sensitive data.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#creating-a-domain-controller","title":"Creating a Domain Controller","text":"<p>Alright, now that we have our prequisites our of the way, we can start adding the Active Directory Domain Services role, so DC-01 can become a Domain Controller. There is really two steps in this process. First we need to install the Active Directory Domain Services role then we need to promote the Server to be a Domain Controller.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#install-active-directory-domain-services","title":"Install Active Directory Domain Services","text":"<p>To Install Active Directory Domain Services, if you don't have it already, open Server Manager, then you'll want to click on Add Roles and Features there are a few places you can do this from.</p> <p>On your main Dashboard under WELCOME TO SERVER MANAGER the second (2nd) option Add roles and features you can click on that to add the required roles but you can also click on Manage then Add roles and features. Both of these do the exactly same thing so it doesn't matter which one you use.</p> <p></p> <p>After you click on Add Roles and Features you will have a Before you begin information about some recommended task to be completed. We've done all except the updates which we will do another time. From here click Next</p> <p></p> <p>For the Select installation type we will choose Role-based or feature-base installation The second (2nd) option Remote Desktop Services is another feature we will visit in the future.</p> <p></p> <p>Next up we have Select destination server, currently we only have one (1) server to choose from but add we begin to add more and more servers to our Infrastructure, we'll be able to add roles and features on different servers which having to log into them. We can basically perform management task of many servers from just one server. Also another option here you might have notice is too Select a virtual hard disk where you can install choose to install the role on a .vhdx file. Currently we only have dc-01, so we'll click next here.</p> <p></p> <p>This is probably the screen where you'll be a bit intimidated if it's you're first time seeing it, but this is what I mean when I said that Windows Server can become something and all of these options is something that it can become. You can click through each role and read the brief description it gives you. You might notice that we already have the File and storage Services installed. By default, all Windows Server comes with this pre-installed. The role we want is the Active Directory Domain Services role so we'll check that off. </p> <p></p> <p>Right after we check the box, you will get another pop-up asking you if you want to Add features that are required for Active Directory Domain Services. As you can see from the name these are required services that are needed to install Active Directory, you do not install these the installation cannot proceed. This is very common, most roles that you will be adding requires additional features for it proceed. Click Add Features to proceed.</p> <p></p> <p>Once you've click Add Features you'll notice that Active Directory Domain Services is now checked off, so we'll click Next</p> <p></p> <p>After clicking next, you will be brought to the Select features options. If you've read through the features we added early, you would have noticed that they is a feature called Group Policy and as you can see Group Policy is checked off here already along with the Remote Server Administration Tool. If you're wondering if you could have just checked it off yourself here, the answer is yes, remember you just need to features to installed Active Directory but you can choose when to install the features, but I like follow this way of doing it, I never have an issue when installing Active Directory by just adding the features when it asks. So from here, I will click Next</p> <p></p> <p>On the next screen Active Directory Domain Services it gives you some things to note about it. Like installing two Domain controllers to avoid server outages if your one domain controller goes down and Active Directory requires a DNS server to be installed on the network. The Domain Naming System or DNS is an integral part of Active Directory and All Domain Controllers are DNS servers. It also tries to sell you Azure Active Directory which is the Software as a Service (SAAS), plaform that they provide. I will click next here.</p> <p></p> <p>Finally you'll arrive at the Confirm installation selections screen where you have the opportunity to go back and check all of your settings to ensure that you selected the correct Roles and Features. Active Directory Domain Service is a very straightforward installation and if you've been following along what I've been doing, then you should not have any issues. Click Install to begin the installation. You can also check the box to Restart the destination server automatically if required installing Active Directory Domain Services does not require a reboot so I will just will install for now</p> <p></p>"},{"location":"HomeLab/Windows_Projects/dc-01/#promoting-domain-controller","title":"Promoting Domain Controller","text":"<p>As long as you've added the correct features your install should finish without any errors, it also gives you a summery of all the roles and features that it successfully installed. If it does error out you might have to do some research to figure out why it errored out. Now that the role is successfully installed, you will see under Active Directory Domain Services that Additional steps are required to make this machine a domain controller and under that you have Promote this server to a domain controller.</p> <p></p> <p>Next we will click the option Promote this server to a domain controller to begin the process. The first screen that comes up is Deployment Configuration. Here, you have a few options and I'll go through these.</p> <ul> <li> <p>Add a Domain controller to an existing domain - This option would be useful if we were adding a second (2nd) Domain Controller to an existing forest. We currently don't have an Active Directory forest so this option will not work for us.</p> </li> <li> <p>Add a new domain to an existing forest - This option would be useful if we were adding another domain to our forest. For example if our Domain was called infotech.ca we can add a sub-domain called us.infotech.ca or even something something completely different like techlabs.ca. Let's say that we did indeed have all three of these domains, infotech.ca, us.infotech.ca and techlabs.ca, we can have all three of these domain exist within something called an Active Directory Forest. Think of an Forest as a container for domains. and Within the forest you can manage all of your domains and share resources between them.</p> </li> <li> <p>Add a new forest: - THis is the option you want to choose if you starting from the beginning, you don't have any forest or domain pre-existing. This is the first step you take. As I mentioned earlier, think of a forest as a container for your domains. We will choose Add a new forest and we will enter the domain: prblabs.ca</p> </li> </ul> <p></p> <p>Your next screen will take you to Domain Controller Options. Your first choice is: Select functional level of the new forest and root domain. Forest and Domain functional levels are classified by different version of Windows Server operation system. The more </p> <p>Here's some additional information about Forest and Domain functional level</p> <p>The Forest Functional Level (FFL) in Active Directory defines the set of Active Directory features that are available across all domains within a forest. It determines the version of Windows Server that can be used on domain controllers (DCs) and the features that can be used across the forest. It also ensures that domain controllers in the forest are running compatible versions of Windows Server for the selected functional level.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#key-points-about-forest-functional-levels","title":"Key Points About Forest Functional Levels:","text":"<ul> <li> <p>Compatibility: The FFL specifies the minimum version of Windows Server that domain controllers must run. For example, if the FFL is set to Windows Server 2016, all domain controllers in the forest must be running Windows Server 2016 or later.</p> </li> <li> <p>Features: Each functional level introduces new Active Directory features, improving the management, security, and functionality of the forest. Some advanced features only become available when the forest is raised to a higher functional level.</p> </li> <li> <p>Per-Forest Setting: The FFL applies to all domains within the forest. In contrast, Domain Functional Level (DFL) applies to individual domains within the forest. However, a domain cannot have a higher DFL than the forest\u2019s FFL.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#raising-the-forest-functional-level","title":"Raising the Forest Functional Level:","text":"<p>You can raise the FFL to enable new features, but once you do so, older domain controllers running older versions of Windows Server cannot be part of the forest.</p> <ul> <li> <p>To raise the forest functional level, you must ensure that all domain controllers in the forest are running the minimum Windows Server version required by the new functional level.</p> </li> <li> <p>This action is one-way\u2014you cannot lower the FFL once it is raised without performing a domain or forest restore.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#available-forest-functional-levels","title":"Available Forest Functional Levels:","text":"<p>Here\u2019s a breakdown of the available forest functional levels and the features they provide:</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-2000-native","title":"Windows 2000 Native:","text":"<ul> <li>Basic Active Directory features such as organizational units (OUs), Group Policy, and universal groups.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-server-2003","title":"Windows Server 2003:","text":"<ul> <li> <p>Forest Trusts: Allows the creation of trust relationships between different forests.</p> </li> <li> <p>Linked Value Replication: Improves replication of multi-valued attributes like group memberships.</p> </li> <li> <p>Improved security: More granular password policies.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-server-2008","title":"Windows Server 2008:","text":"<ul> <li> <p>Read-only Domain Controllers (RODCs): Allows domain controllers with read-only copies of Active Directory, improving security in less trusted locations.</p> </li> <li> <p>DFS Replication for SYSVOL: Replaces the older File Replication Service (FRS) for better replication. Windows Server 2008 R2:</p> </li> <li> <p>Active Directory Recycle Bin: Allows restoration of accidentally deleted objects (such as users and groups) without restoring from a backup.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-server-2012","title":"Windows Server 2012:","text":"<ul> <li> <p>Dynamic Access Control (DAC): Provides more granular access control based on user attributes and security policies.</p> </li> <li> <p>Kerberos Armoring: Strengthens Kerberos authentication.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-server-2012-r2","title":"Windows Server 2012 R2:","text":"<ul> <li>Improved Kerberos Authentication: Additional security features like shadow principals for resource forests.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-server-2016-highest-available-ffl","title":"Windows Server 2016 (highest available FFL):","text":"<ul> <li> <p>Privileged Access Management (PAM): Allows for time-limited privileged access using Microsoft Identity Manager.</p> </li> <li> <p>Azure AD integration: Enhanced support for hybrid identity setups involving both on-premises AD and Azure AD.</p> </li> </ul> <p>**Important Considerations:</p> <ul> <li> <p>Raising the FFL is permanent: You cannot lower the functional level once it is raised.</p> </li> <li> <p>All domain controllers must be compatible: Before raising the FFL, ensure that all domain controllers are running at least the minimum Windows Server version required for the new functional level.</p> </li> <li> <p>New features become available: Some advanced Active Directory features, like the Active Directory Recycle Bin or Privileged Access Management, require a higher FFL to function.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#when-to-raise-the-forest-functional-level","title":"When to Raise the Forest Functional Level:","text":"<p>You should raise the FFL when:</p> <ul> <li> <p>All domain controllers in the forest are running a compatible Windows Server version (e.g., Windows Server 2016 or higher).</p> </li> <li> <p>You want to take advantage of new features and security enhancements introduced in newer functional levels.</p> </li> </ul> <p>For our Functional level we will choose 2016</p> <p>Next is the Domain Function level:</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#what-are-domain-functional-levels-dfl","title":"What Are Domain Functional Levels (DFL)?","text":"<p>The Domain Functional Level (DFL) determines the set of advanced features available in a particular Active Directory domain. It also specifies the minimum version of Windows Server that domain controllers in the domain can run. Higher functional levels unlock additional Active Directory features, but to raise the DFL, all domain controllers in the domain must be running a Windows Server version that supports the chosen functional level.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#key-points-about-domain-functional-levels","title":"Key Points About Domain Functional Levels:","text":"<ul> <li> <p>Compatibility: DFL defines the minimum Windows Server version required for all domain controllers in a domain. For instance, if the DFL is set to Windows Server 2016, then all domain controllers must be running Windows Server 2016 or later.</p> </li> <li> <p>Feature Availability: Higher domain functional levels enable more advanced Active Directory features. As you raise the DFL, new features become available, but older domain controllers that do not meet the functional level requirements can no longer be used.</p> </li> <li> <p>Per-Domain Setting: The DFL is specific to each domain. Multiple domains within the same forest can operate at different functional levels, but no domain can have a functional level higher than the forest's functional level (FFL).</p> </li> <li> <p>Permanent Change: Raising the DFL is a one-way operation\u2014you can raise it, but you cannot lower it without restoring the domain from a backup. This ensures that all domain controllers are upgraded before the new functionality is introduced.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#available-domain-functional-levels-and-their-features","title":"Available Domain Functional Levels and Their Features:","text":"<p>Here is a list of the available DFLs and the key features they introduce:</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-2000-native_1","title":"Windows 2000 Native:","text":"<ul> <li> <p>Basic Active Directory features such as Organizational Units (OUs), Group Policy, and Universal Groups.</p> </li> <li> <p>Domain controllers can run Windows 2000 or higher.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-server-2003_1","title":"Windows Server 2003:","text":"<ul> <li> <p>Linked Value Replication (LVR): Reduces replication traffic by replicating changes to individual group members instead of the entire group.</p> </li> <li> <p>Improved password policies: Supports fine-grained password and account lockout policies for different sets of users. Last logon timestamp attribute: Tracks the last time a user successfully authenticated in the domain.</p> </li> <li> <p>Domain controllers must run Windows Server 2003 or higher.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-server-2008_1","title":"Windows Server 2008:","text":"<ul> <li> <p>Read-only Domain Controllers (RODCs): Allows for domain controllers with read-only copies of Active Directory, useful in less secure locations.</p> </li> <li> <p>DFS Replication for SYSVOL: Replaces the older File Replication Service (FRS) with DFS Replication for better performance and reliability.</p> </li> <li> <p>Domain controllers must run Windows Server 2008 or higher.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-server-2008-r2","title":"Windows Server 2008 R2:","text":"<ul> <li> <p>Active Directory Recycle Bin: Enables administrators to restore deleted AD objects (users, groups, etc.) without needing to restore from a backup.</p> </li> <li> <p>Authentication Mechanism Assurance: Adds the ability to enforce more stringent security policies based on the method of authentication.</p> </li> <li> <p>Domain controllers must run Windows Server 2008 R2 or higher.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-server-2012_1","title":"Windows Server 2012:","text":"<ul> <li> <p>Dynamic Access Control (DAC): Provides more flexible access control policies that are based on user attributes (claims-based access control).</p> </li> <li> <p>Kerberos Armoring: Provides stronger security for Kerberos authentication, preventing certain types of attacks.</p> </li> <li> <p>Domain controllers must run Windows Server 2012 or higher.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-server-2012-r2_1","title":"Windows Server 2012 R2:","text":"<ul> <li> <p>Improved Kerberos Authentication: Adds claims-based authentication, which allows for more granular and flexible control over resource access.</p> </li> <li> <p>Domain controllers must run Windows Server 2012 R2 or higher.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#windows-server-2016-highest-available-functional-level","title":"Windows Server 2016 (Highest available functional level):","text":"<ul> <li> <p>Privileged Access Management (PAM): Provides mechanisms to control and monitor privileged administrative access with time-bound access controls.</p> </li> <li> <p>Improved security features: Better security auditing, protection from credential theft, and stronger encryption protocols between domain controllers and clients.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#domain-controllers-must-run-windows-server-2016-or-higher","title":"Domain controllers must run Windows Server 2016 or higher.","text":""},{"location":"HomeLab/Windows_Projects/dc-01/#windows-server-2019-2022","title":"Windows Server 2019 / 2022:","text":"<ul> <li> <p>No new DFL introduced: Windows Server 2019 and Windows Server 2022 continue to use the Windows Server 2016 DFL as the highest available functional level. These newer server versions introduce performance and security enhancements but do not require a new domain functional level.</p> </li> <li> <p>Domain controllers can run Windows Server 2019 or Windows Server 2022, but the functional level remains at Windows Server 2016.</p> </li> </ul> <p>Okay, I'm you've probably scrolled through all of that block of text, but I figured I'd add it there just in case you were curious what the forest and domain functional levels.  However, just to recap we will be be selecting 2016* for both the Forest functional level and Domain functional level**</p> <p>Another option is the Specific domain controller capabilities, notice that it pre-checked Domain Name System (DNS) server and Global Catalog (GC). You're able to uncheck DNS if you want to but I would advise you not too, a domain controller heavily relies on the DNS service to perform most of it's duties, if you were to uncheck DNS from the list of options, your installation will fail. The other option Global Catalog here's some information about the Global Catalog feature. </p>"},{"location":"HomeLab/Windows_Projects/dc-01/#global-catalog","title":"Global Catalog","text":"<p>In Active Directory (AD), the Global Catalog (GC) is a distributed data repository that contains a partial, read-only copy of all objects from every domain in the forest. The Global Catalog is designed to help users and applications find and access directory information across multiple domains within a forest quickly, without the need to contact each domain individually.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#key-features-of-the-global-catalog","title":"Key Features of the Global Catalog:","text":""},{"location":"HomeLab/Windows_Projects/dc-01/#partial-attribute-set","title":"Partial Attribute Set:","text":"<ul> <li> <p>The Global Catalog doesn\u2019t store a complete copy of every object. Instead, it stores a subset of attributes, known as the partial attribute set. This subset includes attributes that are most frequently used in search queries, such as a user\u2019s first name, last name, email address, and group membership.</p> </li> <li> <p>Each domain controller that hosts the Global Catalog holds the partial attribute set for all objects in every domain of the forest, not just the domain it belongs to.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#full-copies-of-local-domain-data","title":"Full Copies of Local Domain Data:","text":"<ul> <li>For the domain in which a Global Catalog server resides, the Global Catalog contains a full copy of all objects and their attributes. This ensures that domain controllers can still perform full queries for objects in their own domain without needing to refer to another domain controller.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#global-search","title":"Global Search:","text":"<ul> <li>One of the main functions of the Global Catalog is to provide an efficient search mechanism across all domains in the forest. When a user or application searches for an object (such as another user or printer), the Global Catalog allows the search to include all domains in the forest without needing to contact every domain controller separately.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#authentication","title":"Authentication:","text":"<ul> <li>The Global Catalog plays an important role in user logon. When a user logs into a domain, the domain controller checks the user\u2019s membership in universal groups, which may be stored in other domains. The Global Catalog provides this information quickly, enabling the logon process to complete even if the user belongs to universal groups from other domains. If the Global Catalog is unavailable, users may experience issues logging into the domain, especially if they belong to groups that span multiple domains.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#universal-group-membership-caching","title":"Universal Group Membership Caching:","text":"<ul> <li>The Global Catalog contains information about universal groups in the forest. Universal groups can contain members from any domain within the forest, so storing membership details in the Global Catalog makes it possible to resolve group memberships without needing to contact every domain individually.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#location-of-global-catalog-servers","title":"Location of Global Catalog Servers:","text":"<ul> <li> <p>Global Catalog Servers are domain controllers that have been specifically configured to hold the Global Catalog. Not every domain controller in a forest has to be a Global Catalog server, but it's common to have at least one Global Catalog server per site for performance and redundancy.</p> </li> <li> <p>By default, the first domain controller in a forest is configured as a Global Catalog server. Additional domain controllers can be designated as Global Catalog servers as needed.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#why-is-the-global-catalog-important","title":"Why Is the Global Catalog Important?","text":"<ul> <li> <p>Forest-Wide Searches: The Global Catalog allows users to search for resources (such as users, computers, and printers) across all domains within the forest. Without the Global Catalog, users would have to query domain controllers for each domain individually to find what they are looking for.</p> </li> <li> <p>Faster Authentication: The Global Catalog is critical during the logon process because it stores universal group memberships. When a user logs in, their group memberships are checked, and the Global Catalog provides that information. If no Global Catalog server is available, logging in may fail or be delayed.</p> </li> <li> <p>Multi-Domain Environments: In environments where there are multiple domains in a forest, the Global Catalog provides a way to efficiently handle directory searches and group membership queries across domains. It simplifies the process by storing key information about objects across the entire forest in one place.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#global-catalog-and-domain-controllers","title":"Global Catalog and Domain Controllers:","text":"<ul> <li> <p>Global Catalog servers are a special role that can be assigned to domain controllers. Not all domain controllers need to be Global Catalog servers, but it's recommended to have at least one in each Active Directory site to ensure high availability and quick directory searches.</p> </li> <li> <p>To make a domain controller a Global Catalog server, you can enable the Global Catalog feature via the Active Directory Sites and Services tool.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#how-the-global-catalog-works","title":"How the Global Catalog Works:","text":"<ul> <li>The Global Catalog contains:<ul> <li>A full replica of all objects and attributes in its own domain.</li> <li>A partial replica (subset of key attributes) for objects in all other domains in the forest.</li> </ul> </li> </ul> <p>When a user or application performs a global search, such as looking for all users with a particular attribute, the Global Catalog server provides the relevant information without needing to query domain controllers in each domain individually.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#key-attributes-stored-in-the-global-catalog","title":"Key Attributes Stored in the Global Catalog:","text":"<p>Some of the key attributes stored in the Global Catalog include:</p> <ul> <li> <p>User attributes such as first name, last name, email address.</p> </li> <li> <p>Computer object attributes such as name and location.</p> </li> <li> <p>Universal group memberships.</p> </li> </ul> <p>The Active Directory schema defines which attributes are stored in the Global Catalog. By default, frequently searched attributes are included, but administrators can modify the schema to add or remove attributes from the Global Catalog.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#benefits-of-the-global-catalog","title":"Benefits of the Global Catalog:","text":"<ul> <li> <p>Efficient Searches: Allows users and applications to search for directory information across multiple domains without needing to contact every domain controller.</p> </li> <li> <p>Faster Logon Process: Provides quick access to universal group membership information during user logon, enabling faster authentication.</p> </li> <li> <p>Simplifies Multi-Domain Queries: For large forests with multiple domains, the Global Catalog greatly simplifies and speeds up directory queries by storing a partial copy of objects from all domains.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#considerations","title":"Considerations:","text":"<ul> <li> <p>Availability: It\u2019s a good practice to ensure there\u2019s a Global Catalog server in each Active Directory site to avoid issues with logon and directory queries, especially in large, multi-domain environments.</p> </li> <li> <p>Network Traffic: Global Catalog replication can increase network traffic since the Global Catalog needs to be updated across domains whenever an object or attribute in the forest changes.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#example-scenario","title":"Example Scenario:","text":"<p>If you have two domains in your forest, infotech.ca and prblabs.ca, and a user from infotech.ca needs to search for a user or resource in prblabs.ca, they would contact a Global Catalog server. The Global Catalog server would provide the necessary information about objects in prblabs.ca without needing to query a domain controller in prblabs.ca directly, making the search process faster and more efficient.</p> <p>The last option we have that is greyed out is Read only domain controller (RODC). Here is some information about the RODC:</p> <p>A Read-Only Domain Controller (RODC) is a special type of domain controller in Active Directory introduced in Windows Server 2008. Unlike a traditional writable domain controller, an RODC contains a read-only copy of the Active Directory database, which means that it does not allow changes to be made directly on it. Any changes that need to be made to the Active Directory database (such as password updates, group changes, etc.) must be sent to a writable domain controller.</p> <p>RODCs are designed for use in environments where security is a concern, or in locations where physical security or connectivity to the network is less reliable, such as branch offices. They provide many of the benefits of a traditional domain controller, such as authenticating logon requests and servicing queries, but with added security restrictions.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#key-features-of-an-rodc","title":"Key Features of an RODC:","text":""},{"location":"HomeLab/Windows_Projects/dc-01/#read-only-active-directory-database","title":"Read-Only Active Directory Database:","text":"<ul> <li> <p>The Active Directory database on an RODC is read-only, meaning it cannot accept or process updates. Any changes made to AD objects must be forwarded to a writable domain controller, which then replicates the updates back to the RODC.</p> </li> <li> <p>This limits the potential for accidental or malicious changes to the Active Directory database on the RODC.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#credential-caching","title":"Credential Caching:","text":"<ul> <li> <p>By default, an RODC does not store user or computer credentials (passwords) locally. However, specific credentials can be cached on the RODC to allow for faster logon processes, particularly useful in remote locations where WAN connections to a writable domain controller might be slow or unreliable.</p> </li> <li> <p>You can control which user or group credentials are cached using a feature called Password Replication Policy (PRP). This allows administrators to specify which accounts\u2019 credentials are allowed to be stored on the RODC, adding an extra layer of security.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#improved-security-in-less-secure-locations","title":"Improved Security in Less Secure Locations:","text":"<ul> <li> <p>The RODC is particularly useful in environments where physical security may be compromised, such as branch offices or remote sites. Since it only contains a read-only copy of the AD database, any compromise of the RODC does not allow an attacker to make changes directly to Active Directory.</p> </li> <li> <p>If an RODC is stolen or compromised, no changes can be made to the Active Directory environment, and the credential data stored on it is limited.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#unidirectional-replication","title":"Unidirectional Replication:","text":"<ul> <li>Replication between an RODC and a writable domain controller is unidirectional. The RODC receives updates from a writable domain controller but does not replicate changes back to the writable domain controller. This means that any changes made locally on the RODC (if somehow attempted) will not affect the writable domain controllers in the environment.</li> </ul> <p>Administrator Role Separation:</p> <ul> <li>RODCs allow for administrator role separation, which means that you can delegate local administration of the RODC to non-domain administrators without giving them full domain administrator rights. This is useful in scenarios where local IT staff need to manage the RODC but should not have broader privileges within the domain.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#key-benefits-of-an-rodc","title":"Key Benefits of an RODC:","text":"<p>Enhanced Security for Remote or Less Secure Locations:</p> <ul> <li> <p>Since the RODC holds only a read-only copy of the Active Directory database and can limit credential caching, it reduces the risk of data compromise in environments where physical or network security cannot be guaranteed.</p> </li> <li> <p>Even if an RODC is physically compromised, attackers cannot modify the AD database or elevate privileges on the domain.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#reduced-risk-of-credential-exposure","title":"Reduced Risk of Credential Exposure:","text":"<ul> <li>By using Password Replication Policies (PRP) to control which credentials are cached locally, you can ensure that only a subset of users\u2019 credentials are stored on the RODC, minimizing the risk if the RODC is compromised.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#local-authentication-without-full-dc","title":"Local Authentication Without Full DC:","text":"<ul> <li>In remote sites with poor network connectivity, an RODC can provide local authentication and authorization for users, even if the connection to a writable domain controller is slow or intermittent. Cached credentials enable users to authenticate even if the RODC temporarily loses connection to the main network.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#delegated-administration","title":"Delegated Administration:","text":"<ul> <li>The ability to delegate local administration to non-domain administrators (without giving them access to the full Active Directory infrastructure) is beneficial for branch offices where IT staff need to perform maintenance on the RODC but should not have broader access rights.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#password-replication-policy-prp","title":"Password Replication Policy (PRP):","text":"<p>A Password Replication Policy (PRP) defines which user and computer credentials are allowed to be cached on the RODC. By default, an RODC does not cache any credentials unless explicitly allowed via PRP. This helps prevent credential theft in the event that an RODC is compromised.</p> <ul> <li> <p>Allowed List: Specifies which user accounts or computer accounts can have their credentials cached on the RODC.</p> </li> <li> <p>Denied List: Specifies which user or computer credentials can never be cached on the RODC. This typically includes sensitive accounts like domain admins, enterprise admins, and server administrators.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#use-cases-for-rodc","title":"Use Cases for RODC:","text":""},{"location":"HomeLab/Windows_Projects/dc-01/#branch-offices","title":"Branch Offices:","text":"<ul> <li>RODCs are ideal for branch offices where there might be limited IT staff and less secure infrastructure. They provide local authentication and replication while mitigating risks associated with physical security breaches.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#remote-locations-with-poor-connectivity","title":"Remote Locations with Poor Connectivity:","text":"<ul> <li>In areas where network connectivity to a writable domain controller might be unreliable or slow, an RODC can serve as a local domain controller, caching credentials and servicing logon requests without requiring continuous access to the central AD infrastructure.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#edge-environments-or-dmzs","title":"Edge Environments or DMZs:","text":"<ul> <li>RODCs can be deployed in a perimeter network (DMZ) to allow secure access to the network for certain services without exposing the writable domain controller to potential external threats.</li> </ul> <p>The reason why the RODC option is currently unchecked is mostly because we currently don't have a primary domain controller. The Primary Domain Controller is usually the first domain controller, however, any domain controller can be the primary as long as they hold the 5 FMSO roles.</p> <p>Your last option is the create a Type the Directory Services Restore Mode (DSRM) password. Some short information about this: </p> <p>The Directory Services Restore Mode (DSRM) password is a special password used in Active Directory (AD) environments. It is required when you need to boot a domain controller into Directory Services Restore Mode (DSRM), a special recovery mode for performing maintenance and repair tasks on the Active Directory database.</p> <p>I will be creating a password here then I will click next.</p> <p></p> <p>Click next will bring you to Specify DNS delegation options If you click on Show more you will see the following message:</p> <p></p> <p>This isn't anything to be alarmed about. It's basically saying that it's trying to create something in DNS, but we currently don't have DNS installed, however the installation will solve this issue for us. Click Next to proceed.</p> <p></p> <p>It will then automatically create a NetBios name for you. NetBIOS (Network Basic Input/Output System) is a legacy networking protocol that provides communication services for applications on a local network (LAN). It was developed in the early 1980s by IBM and Sytek and was designed to allow computers to communicate with each other over small, local networks. Although it is not used as much today in modern networks, it still has some legacy applications, especially in older versions of Windows and in environments where backward compatibility is necessary.</p> <p>It will automatically create a NetBios name for us. I usually leave this as the default. Unless I need to change this for a specific reason.</p> <p></p> <p>Next it will ask us to Specify the location of the AD DS database, log files and SYSVOL. I usually leave these as the default. Unless I would want to store these on a remote server somewhere. I will click Next</p> <p></p> <p>The installation will give you a Review Options screen where you can go through your selections to ensure what you choose is what you want. You can click on the View script option that will show you some powershell commands for you to automate the installation. I will save it for my next server. Then I will click Next</p> <p></p> <p>The Third (3rd) to last screen will bring you to the Prequisites Check where it will ensure that your Windows Server meets of the requirements to become a Domain Controller. If there is any issues, your check will fail and you will see a few error messages with some action items. Usually you will have a few warnings, but these is standard, they installation will still proceed with the even if the warnings are not resolved. There is also a message at the bottom that tell you If you click install, the server automatically reboots at the end of the promotion operations. I'm working on a test Virtual Machine in my situation but if this was a server in production and you always need to give notice prior to reboot a server you will need to ensure the correct parties are notified. Lastly I will click Install</p> <p></p> <p>Once your installation is successful, the server will automatically reboot and it will bring you to a login screen. You can sign in with the same password you had before. Once to note about a Domain Controller is that the concept of Local Users no longer exist on a Domain Controller. What happens is that all of your accounts are now Domain Accounts that are managed by your Domain Controller. Once your DC reboots and you're back at the login screen, you will have to type CTRL+ALT+DEL for you to be able to type in your password. Another thing to log is that the account you're logging into is called PRBLABS\\Administrator remember prblabs.ca was the name I chose for my Domain Controller. For now I will login with my password to proceed. I will enter my password and press enter.</p> <p></p> <p>As long as my credentials is correct, I will be logged into my Server's Desktop and as usual the Server Manage Dashboard will automatically load. If you're wondering if there's a way to have the Server Manager not come up, yes there is. You have to Click on Manage &gt; Server Manager Properties and check the box for Do no start Server Manager automatically at logon</p> <p></p> <p></p>"},{"location":"HomeLab/Windows_Projects/dc-01/#verifying-your-windows-server-is-a-domain-controller","title":"Verifying your Windows Server is a Domain Controller","text":"<p>Okay so you've just promoted your computer to be a Domain Controller but how do you know that your computer is indeed a Domain Controller. Here's a few ways to get that information.</p> <p>You can open up command prompt and type the following command: </p> <p><pre><code>nltest/dsgetdc:&lt;domain_name&gt;\n</code></pre> For my domain it will look like the following:</p> <p><pre><code>nltest /dsgetdc:prblabs.ca\n</code></pre> You can see from the results, my DC is \\dc-01.prblabs.ca which is the name of my Windows Server.</p> <p></p> <p>Something else you can is the tools your Windows Server has installed. Usually Active Directory Comes with a few unique tools that's used to manage Active Directory. These are:</p> <ul> <li> <p>Active Directory Users and Computers</p> </li> <li> <p>Active Directory Domains and Trust</p> </li> <li> <p>Active Directory Sites and Services</p> </li> <li> <p>Active Directory Module for Windows PowerShell</p> </li> <li> <p>Active Directory Administrative Center</p> </li> <li> <p>Group Policy Management</p> </li> </ul> <p>You might have recalled that we also installed the DNS server, however all Domain Controllers are DNS servers but not all DNS servers are Domain Controller. You can have a standalone DNS server without the Active Directory Roles installed.</p> <p></p> <p>Next you can open powershell as an Administrator and run the following command</p> <pre><code>Get-ADDomainController\n</code></pre> <p>And you show see the following results</p> <p></p> <p>From here you should see Hostname: DC-01.prblabs.ca which indicates that this server is indeed a Domain Controller</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#creating-a-domain-user-account","title":"Creating a Domain User Account","text":"<p>Okay, usually the first thing I like to do after I create a new Active Directory Domain is to create a user account that I will use for my Domain Operations.</p> <p>I can do that in the following ways.</p> <p>Open up Server Manager if you don't have it already. Click on Tools then Active Directory Users and Computers</p> <p></p> <p>Active Directory Users and Computers should now open up for you. It looks like this:</p> <p></p> <p>From here you can my Domain prblabs.ca and I'm able to expand that by click on the triangle next to my domain name</p> <p></p> <p>From here, you should see the default structure of Active Directory Users and Computers. Here's some information about the Active Directory Users and Computers console:</p> <p>Active Directory Users and Computers (ADUC) is a Microsoft Management Console (MMC) snap-in used for managing objects within an Active Directory (AD) domain. It provides a graphical interface that allows administrators to manage and organize resources like users, computers, groups, and organizational units (OUs) in a domain.</p>"},{"location":"HomeLab/Windows_Projects/dc-01/#key-features-of-aduc","title":"Key Features of ADUC:","text":""},{"location":"HomeLab/Windows_Projects/dc-01/#user-management","title":"User Management:","text":"<ul> <li> <p>Create, modify, and manage user accounts.</p> </li> <li> <p>Set user properties, such as passwords, group memberships, logon hours, and account expiration.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#computer-management","title":"Computer Management:","text":"<ul> <li> <p>Add and manage computer accounts in the domain.</p> </li> <li> <p>Organize computers into Organizational Units (OUs) for easier management and policy application.</p> </li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#group-management","title":"Group Management:","text":"<ul> <li>Create and manage security and distribution groups to control resource access and email distribution.</li> </ul> <p>Organizational Units (OUs):</p> <ul> <li>OUs are containers that help organize and structure resources (users, computers, etc.) in the domain. You can apply Group Policies to OUs for centralized management.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#delegate-administrative-control","title":"Delegate Administrative Control:","text":"<ul> <li>ADUC allows you to delegate specific administrative tasks to users or groups without giving them full domain administrator privileges.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#active-directory-search","title":"Active Directory Search:","text":"<ul> <li>You can use ADUC to search for and locate objects (users, computers, etc.) across the entire domain or within specific OUs.</li> </ul>"},{"location":"HomeLab/Windows_Projects/dc-01/#typical-use-cases","title":"Typical Use Cases:","text":"<ul> <li> <p>Creating and managing user accounts (e.g., adding a new employee).</p> </li> <li> <p>Organizing resources into OUs for better management.</p> </li> <li> <p>Assigning group memberships to manage access to resources.</p> </li> <li> <p>Resetting passwords and unlocking user accounts.</p> </li> </ul> <p>The folders you see there aren't really folders. They are called: Organizational Units (OU) and they can used as a container for all of your Active Directory Objects like user accounts, group accounts and computer accounts. Let's create a new Organizational Unit (OU) under our prblabs.ca domain.</p> <p>We'll right click on prblabs.ca and can choose:</p> <p></p> <p>I'll name my new Organization Unit prbUsers because this is where I'm going to store all of my new user accounts. I'll click OK once I'm done.</p> <p></p> <p>Once I click OK, my new Organizational Unit is create and I can begin using. After creation my OU will appear below Users but the Active Directory organizes all of it's OUs by alphabetical order so if I were to refresh or close Active Directory and re-open it since P comes before U, you will see prbUsers above Users.</p> <p></p>"},{"location":"HomeLab/Windows_Projects/dc-01/#creating-an-active-directory-user-account","title":"Creating an Active Directory User account","text":"<p>To create my first user account I will right-click on my prbUsers Organizational Unit then click New then User</p> <p></p> <p>From here the New Object - User box comes up and I will add the following information</p> <ul> <li>First Name: Prb</li> <li>Last Name: Admin </li> <li>Full Name Prb Admin</li> <li>User logon name: prbadmin</li> </ul> <p>The User logon name (pre-Windows 2000) will automatically be generated when you add the User logon name. Click next will ask me to create a password, here I have a few more options:</p> <ul> <li>User must change password at next logon:</li> <li>User cannot change password: </li> <li>Password never expires</li> <li>Account is disable</li> </ul> <p>I will uncheck all of these boxes because I do not need any of these options and click Next then Finish</p> <p></p> <p></p> <p></p> <p>Perfect, I've just created a user account. Cool, but what can I do it with? Well a Domain account like the one we just created will allow me to log into a Domain Computer. If your next questions is what is a Domain computer?. Well, it's a computer that is joined to the Active Directory Domain. You can see me domain my 2nd domain controller dc-02 to my Active Directory Domain here: DC-02 - Joining Domain. I will explain more about what I can do with my Domain account but first I would like to add my account to two Security Groups these are: Domain Admin and Enterprise Admin. </p> <p>I do this by right clicking on my Prb Admin then click Properties:</p> <p></p> <p>and click the MemberOf tab:</p> <p></p> <p>Then click the Add button:</p> <p></p> <p>Then type in Domain Admins in the Enter the object names to select (examples):</p> <p></p> <p>From where I will click Check Names and then Click OK. I will repeat the process to add the Enterprise Admins group as well.</p> <p></p> <p>From there I will click Apply and then OK</p> <p></p> <p>Perfect and we're done. We've just created an Domain Account and we've added this account to be the Domain Admins and Enterprise Admins security groups.</p> <p>Here's how you can do the exact same thing in powershell.</p> <p>First we'll click on our Start Menu and open up Active Directory Module for Windows Powershell. If you're wondering what's the difference between this and the regular powershell. This special powershell session comes with Active Directory commands pre-load, so we can use this special version of powershell to manage our Active Directory session. You can also launch regular powershell and load the Active Directory Module from there.</p> <p></p> <pre><code>New-ADUser -Name \"Prb User1\" -GivenName \"PRB\" -Surname \"User\" -SamAccountName \"prbuser1\" -UserPrincipalName \"prbuser1@yourdomain.com\" -Path \"CN=Users,DC=yourdomain,DC=com\" -AccountPassword (ConvertTo-SecureString \"Winter2024!\" -AsPlainText -Force) -Enabled $true\n</code></pre> <p></p> <p>Then back in Active Directory Users and Computer we might need to refresh the Window to see our new user account.</p> <p></p> <p>Once the refresh is completed, we should see our new user account inside of Active Directory:</p> <p></p> <p>Okay, I think I will end it here. I might have overloaded this section with a lot of information but I felt like the information was needed to get an idea of what's going on. It's nice to follow a tutorial to get something done but if you don't know what you're doing you might run into some issues the next time you have to do it on your own.</p> <p>This was just our first stop for our Windows Servers. Next up we will be creating a Secondary Domain Controller called: DC-02. You can find that information here: DC-02</p>"},{"location":"HomeLab/Windows_Projects/dc-02/","title":"DC-02","text":""},{"location":"HomeLab/Windows_Projects/dc-02/#building-a-secondary-domain-controller","title":"Building a Secondary Domain Controller","text":"<p>In the previous section we created a New Domain Controller called: DC-01 you can find that setup here: DC-01. Now we're going to be creating a new domain controller. I've essentially built a new Windows Server and called it: DC-02 following the same methods I did in this page: Windows Server Installation. The only things I changed here where was the name of the Virtual Machine, the Hostname and the IP address where I used: </p> <ul> <li>IP address: 192.168.100.21</li> <li>Subnet Mask: 255.255.255.0</li> <li>Gateway: 192.168.100.254</li> <li>DNS Server 1: 192.168.100.20</li> <li>DNS Server 2: 192.168.100.21</li> </ul> <p>You might have noticed that I used DC-01 as the DNS Server 1 and DC-02 will be the secondary DNS Server. If you're think that you prefer to use google's DNS at 8.8.8.8. Let's see why that won't work for you.</p> <p>So we currently have an Active Directory Domain. Awesome right, but how do we use it and what does that really mean? Currently inside of our Active Directory Domain we only have 1 server within our Domain and that is DC-01. Which means we can only manage DC-01 and any user accounts that we create can only log into DC-01. Which is not very useful at the moment but we'll change that. We'll add DC-02 to our prblabs.ca domain. Here's how we do that but first, I changed my DNS settings on DC-02 to be the following.</p> <p></p> <p>Notice I have my DNS servers set to 8.8.8.8 and 1.1.1.1. These are what you call: Public DNS Servers. Which means anyone can use this to get out to the internet. </p> <p>Now to add DC-02 to my prblabs.ca Domain. First I open up Server Manager and go to Local Computer then I click on Computer Name: dc-02 </p> <p></p> <p>Then I click on Change</p> <p></p> <p>And under Member of I change this from Workgroup to a Domain and I enter prblabs.ca in the Domain field:</p> <p></p> <p>And I will then click OK and spoiler alert there is going to be an error message:</p> <p></p> <p>Now the reason why this gave us an error message is because we have our DNS entries set to: 8.8.8.8 and 1.1.1.1. And because of that, we cannot contact DC-01 to join the domain. </p> <p>Here's a few test:</p> <p>Can I ping DC-01 IP address 192.168.100.20:</p> <p></p> <p>The answer is yes, but what this means is that they are in the same network so yes they can communicate with each, but when it comes to name resolution. dc-01's domain name is dc-01.prblabs.ca, DC-02 knows go to get to 192.168.100.20 because our gateway handles that but when it comes to name resolution, we are relying on Google's and Cloudflare's DNS which does not know what DC-01 is and what it's IP address is. We can see that by trying the following command in CMD:</p> <p></p> <p>nslookup is a command that we can use to tell us what the IP address of a DNS entry like google.com and Microsoft.com. You can see we can get information on google.com but not one dc-01.prblabs.ca. The fix this we need a DNS server that can resolve the hostname dc-01.prblabs.ca and lucky for us we do have a DNS server that can do that. It's DC-01.</p> <p>So we'll change our DNS IP address as the following:</p> <p></p> <p>Alright, let's try out nslookup command again.</p> <p></p> <p>There is a DNS request timed out message, but we were able to resolve dc-01.prblabs.ca to 192.168.100.20. Perfect. let's trying adding DC-02 to our Domain now.</p> <p></p> <p>If a Windows Security box comes up for you to enter your username and password, that's means we're able to contact DC-01 to join the domain. From here, we need to enter a Domain Account credential for authentications. This is important. Domain Accounts and objects that are created within Active Directory. When we first promoted DC-01 to be a domain controller our Administrator account got converted to a domain account. So we can use that, but we also created a user account called: prbadmin. I will use this but you can use something else. Again, the user account you created on DC-02 will not work. Only a Domain Account is needed here.</p> <p></p> <p>Once I enter my domain admin credential here I will click OK</p> <p>If you see Welcome to the prblabs.ca domain it means you were successful, if you had a incorrect user name and password, it means there is something wrong with your credentials. If you got an insufficient permission message it means that your user account does not have the necessary rights to add a computer to a domain. You can resolve this by adding your user account to the domain admins security group.</p> <p>Once you're done and it's working you can click OK</p> <p></p> <p>Then it will tell you that you need to restart for it to take effect. Click OK</p> <p></p> <p>After that you can click Close </p> <p></p> <p>On the System Properties box and there is will ask you if you want to reboot, I will click restart now.</p> <p></p> <p>Once it's completed rebooting, you will be bring to the login screen.</p> <p></p>"},{"location":"HomeLab/Windows_Projects/dc-02/#local-account-vs-domain-account","title":"Local Account vs. Domain Account","text":"<p>Before you log back into DC-02. There's a few things you should know. Prior to joining DC-02 to the Domain, whenever we log into DC-02, we're using an user account that exist on DC-02. This is call a local account which means the account exist on DC-02 local hard drive, we can also create many more Local Accounts for DC-02 and log into with those as well, but they will all still be stored on  DC-02's local hard drive. So even if DC-02 has no network access, you will still be able to log into DC-02 using the local account. Now that we've added DC-02 to our prblabs.ca Domain, we can now log into the DC-02 using Domain Accounts these accounts are stored inside of Active Directory, so when we log into DC-02, it reaches out to the network and then contacts our Domain Controller which is DC-01, and from there DC-01 will authenticate and authorize DC-02 to login using the Domain Account as long as the account as the relevant permissions. </p> <p>Let's try logging into our Local Account on DC-02, at the login screen click on Other user</p> <p></p> <p>Notice when I click on Other User at the bottom left hand corner of the screen, right below the credentials boxes, I see Sign in to: PRBLABS. What this means that when I'm logging in, I need to use a domain credential to get in. If you're wondering, how can you log in as your local administrator account. If you enter a ./ at the user logon box it will change the sign in location to be your local computer, let's try that.</p> <p></p> <p>Notice when I enter the symbols ./ my prompt gets changed to say Sign in to: DC-02. What this means is that I will be using local credentials instead of domain credentials. </p> <p>We'll explore more about credentials as we go along. For now, Let's sign in using a domain credentials. I'll use my prbadmin credentials and then I'll press enter.</p> <p></p> <p>As long as your credentials is correct, it will log you into the desktop as the domain user. Now let's trying logging in as a local user. I will log out of my server by click on the start menu then clicking on my profile icon then logout.</p> <p></p> <p>Once we're logged out we'll be brought back to the Log in screen and from here we'll log in as the local administrator. Once again press CTRL + ALT + DEL and then log in as using .\\Administrator and the administrator password you created after completing the installation of Windows.</p> <p></p> <p>Once again, we're choosing to log in as Other user and notice that Sign in to changes from prblabs to DC-02. This is important to note because we're telling it that we want to log into the Server using our local account that exist on the hard drive and not the Domain Account that exist on DC-02. </p> <p>Once we press enter, you'll be logged in as the local administrator. Please know that a Domain Administrator and Local user have different permissions. We'll dive a bit more into that as we go along. For now, I will sign out of local session and we'll sign back in as our Domain account.</p>"},{"location":"HomeLab/Windows_Projects/dc-02/#installing-active-directory-domain-services-role","title":"Installing Active Directory Domain Services Role","text":"<p>First thing, we'll install the the Active Directory Domain Services role. If you remember how to do this, you can go ahead and install it. If you need a refresher you can following the steps below:</p> <p>Launch Server Manager and click on Manage then click Add Roles and Features</p> <p></p> <p>From there press Next</p> <p></p> <p>Select Role-based or feature-based installation then click Next</p> <p></p> <p>Select DC-02 for your destination server:</p> <p></p> <p>Select Active Directory Domain Services for the Server Role:</p> <p></p> <p>Select Add Features to add the required features:</p> <p></p> <p>Then Click Next</p> <p></p> <p>Click Next for Select Feature:</p> <p></p> <p>Then Next for Active Directory Domain Services:</p> <p></p> <p>Click Install to begin the installation:</p> <p></p> <p>The installation is was successful. Now I can easily click Promote this server to a domain controller, however. I will hit close and show you where you can complete the rest of the task.</p> <p></p>"},{"location":"HomeLab/Windows_Projects/dc-02/#promoting-dc-02-to-be-a-secondary-domain-controller","title":"Promoting DC-02 to be a Secondary Domain Controller","text":"<p>Back inside of Server Manager, you should notice a yellow exclamation mark on the flag in the top right hand corner.</p> <p></p> <p>If you click on it, you will see that they are is a Post-Deployment Configuration that needs to be completed. We will click on Promote this server to a domain controller. I wanted to show you this because there are other server roles that has post-deployment configurations. In the event that you mistakenly closed out the completed installation window, you can alway complete your post-deployment task here.</p> <p></p> <p>For Deployment Configuration we will choose Add a domain controller to an existing domain.</p> <p></p> <p>For Domain enter: prblabs.ca</p> <p></p> <p>Then click on Change to supply an account with the proper privileges. Remember your account needs to be added to the Domain Admin group within Active Directory</p> <p></p> <p>Then enter your credentials in the pop-up box:</p> <p></p> <p>Once you're done, click Next</p> <p></p> <p>For Domain Controller Options we'll keep all of the defaults and enter a password for Directory Services Restore Mode DSRM. This is a very important password so be sure to remember it.</p> <p></p> <p>Click Next for DNS Options.</p> <p></p> <p>For Additional Options, For the replication options, you can leave Any Domain Controller unless you need to choose something else.</p> <p></p> <p>For the Paths you can leave all of the default location for the database and log files:</p> <p></p> <p>For the Review Options you can click next:</p> <p></p> <p>At the Prerequisites Check you can click on Install providing that you passed all of the Prequisites</p> <p></p> <p>Once the installation is completed. DC-02 will reboot automatically. Once it comes back online. It will officially be a Domain Controller for the prblabs.ca domain.</p>"},{"location":"HomeLab/Windows_Projects/opnsense/","title":"OPNsense Install","text":""},{"location":"HomeLab/Windows_Projects/opnsense/#opnsense-router-setup","title":"OPNSense Router Setup","text":"<p>This is an optional step if you're following allowing. The goal behind this router is to give me my own seperate subnet for me to play with, without having to worry about conflicting IP addresses or an IP address that I would like to use but is already in use. The opnsense router is a simple setup except for a some Firewall Rules that will allow me to communication with my main subnet.</p> <p>First thing we'll want to do is to download the ISO for opnsense. It can be found here: </p> <p>Download OPNSense</p> <p>Perfect. I'm going to be uploading the OPNSense ISO File to my VMware ESXi Storage repository. Depending on where you are performing your installation, you'll need to ensure that your Virtual Machine is able to access the ISO since you'll need to mount it.</p> <p>First thing I will do will be to create my Virtual Machine for OPNSense</p> <p>In ESXi, I click Create/Register VM and then at the Select creation type I choose Create a new virtual Machine</p> <p></p> <p>Next we will need to Select a name and Guest OS. I will choose the easy name and just call it opnsense-router for the guest OS I want to ensure that I choose the following:</p> <ul> <li>Compatibilty - ESXi 8.0 U2 virtual machine</li> <li>Guest OS family - Other</li> <li>Guest OS version - FreeBSD 14 or later versions (64-bit)</li> </ul> <p>The Guest OS version is important here because if you choose something else, your opnsense vm or installation might not go through because of the different driver options.</p> <p></p> <p>Select storage is the next option. I have a few different hard drives to choose from so I'll just choose: DS1-1TB</p> <p></p> <p>Here is the more important settings to choose. The Customize settings option is where we will choose how much resources we would like to give to our opnsense router.</p> <p>For me I will assigned to following resources:</p> <ul> <li>CPU = 2 vCPU</li> <li>Memory = 2GB</li> <li>Hard Drive = 30GB</li> <li>Network Adapter 1</li> <li>Network Adapter 2</li> </ul> <p>Since this is a router, it will need two networking adapter. One for the WAN traffic to talk out to the internet and the other for the LAN traffic where my Windows Servers will exist.</p> <p>For my adapter settings. I'll basically create an internal network that is not able to talk to the main network (192.168.50.0/24 and 10.10.10.0/24), instead I want this network to go through the WAN interface. </p> <p>You can ignore my naming scheme for my network PGroup1950 is on the 192.168.50.0/24 network and PGroup19100 is on the 192.168.100.0/24 network. Of course, the name you gave your network makes a lot more sense that mine.</p> <p></p> <p>Once you're done with this section you can click Next then Finish</p> <p></p>"},{"location":"HomeLab/Windows_Projects/opnsense/#installing-opnsense","title":"Installing OPNsense","text":"<p>Okay, so we've just completed the creation our Virtual Machine, next up we will need to install opnsense on the Virtual Machine that we've just created.</p> <p>In my ESXi host, I'm going to click on my newly create Virtual Machine called: opnsense-router and Start it up</p> <p></p> <p>You will see a very quick boot screen that gives you about 5 seconds to pause if needed. If your opnsense VM does not boot, there might be an issue with the ISO image, try downloading it again maybe trying DVD instead of VGA or another option that it provides. It could also be your Virutal DVD drive is not being detected on your because you did not choose the correct Guest OS version.</p> <p>If it does boot successfully, you will see a screen like this:</p> <p></p> <p>You might have noticed that OPNSense automatically assigned your WAN and LAN interfaces. Thankfully OPNSense assigned my interfaces correctly. My WAN interface was able to grab an IP address from my Mikrotik Router and my LAN interface received the default networking scheme that's created by opnsense. If your WAN interface does not have an IP address, this could be because opnsense incorrectly assigned your interfaces and they need to be swapped. You can swapped these after the installation since you're in a live environment and the changes you make here will not remain after a reboot.</p> <p>To Begin the installation, type installer as the username and opnsense as the password to begin the installation process.</p> <p>First thing, we need choose a Keymap Selection I will go with the default keymap but you can choose the one that works best for you:</p> <p></p> <p>I'll choose ZFS as my filesystem here but you can any other of the options</p> <p></p> <p>Next it will ask me to select the Virtual Device Type. Here I will choose stripe. I will assigned one hard drive to my opnsense installation so that's all I can do. Since this is just a test lab. I do not need to added security of having a mirror or a different RAID setup in the event of a drive failure. Stripe will work in my situation.</p> <p></p> <p>Next it's going to ask me to confirm which hard drive I will like to install opnsense on. I only have one option so I will press my spacebar to select the device then click OK</p> <p></p> <p>It warns me that the data on the disk is about the get destroyed, since this is a new disk that doesn't contain any data I will say yes.</p> <p></p> <p>Select Yes to begin the installation:</p> <p></p> <p>If thers is any issues with the hardware you've selected, this will be where you will see it. It will error out and will stop the installation process. If this happens to you and you're using physical hardware, ensure that the hardware you're using is compatible with OPNSense. For Virtual Machines, the biggest roadblock here is your hard drive. Ensure you have the correct Hard Drive Controller. For my installation I had VMWare Paravirtual selected as my SCSI Controller 0. If everything goes well, you will see this screen:</p> <p>If you would like to, you can change your root password here but I will complete install and reboot since I will be changing the root password when I log into the web portal.</p> <p></p>"},{"location":"HomeLab/Windows_Projects/opnsense/#configuring-opnsense","title":"Configuring OPNSense","text":"<p>Once your opnsense system is back online, you will be back to the main screen. However, this time it's not longer a live enviroment. And any change you make here will still exist after rebooting.</p> <p></p> <p>Let's start configuring our OPNSense Router. First thing we'll log in using the username and credentials. The username is root and the password is opnsense if you changed it during the installation you can enter the password you created.</p> <p>Logging in will display information about your Network interfaces and IP adderss as well as a menu where you can configure the system.</p> <p></p> <p>If your Network Interfaces needs to be swapped, this is where you can do it. For example, if you have a IP Address for your LAN interface but nothing for your WAN interface. Then it's possible that opnsense incorrectly assigned your interfaces, so swapping them should resolve your issue.</p> <p>To do that, Enter the number 1 and press enter:</p> <p></p> <p>It will ask you if you want to configure LAGGs now, if you know what this is and would like to configure it, you can say yes, if you don't know what this is, you can say no. Notice the N is uppercase and the y is lowercase. This is because N is the default value so if you just press enter, it will select no by default.</p> <p></p> <p>Next it will ask to configure VLANs. I will not be using any VLANs for this router so I will say no.</p> <p></p> <p>Now it will ask you to select your WAN interface. Your WAN interface is what connects to your gateway that then connects out to the internet. For my setup, the WAN interface is vxm1. If you mess up here, don't worry you can always go back and change the interfaces.</p> <p></p> <p>After selecting my WAN interface, it will ask me to select my LAN which is vmx0</p> <p></p> <p>It will ask your to configure an Optional Interface next, since I only have 2 interfaces, I'm not able to configure an optional interface. So I will press enter to proceed.</p> <p></p> <p>Once I'm done with all of my configuration. I will type y to proceed. Remember you have to enter y then press enter. If you just press enter it will select the default option which is N. </p> <p></p> <p>Proceeding with the changes, will reload all of the interfaces. Once it's completed, you'll be back at the main screen. From here, hopefully you've been assigned a WAN IP address not. if not, and you've already tried swapping your interfaces and you're using a virtual appliance like I am, you might need to take another look at your virtual switch and port groups. Something might be off. You can trying assigned a manual IP address and see if that works. If it does and it looks like it's an issue with your DHCP Service.</p> <p>To set your IP address interface, select (2) Set Interface IP Address and press Enter</p> <p></p> <p>From here it will ask you select the interface you would like to configure. I'll start with my LAN interface, so I will type 1 and press Enter</p> <p></p> <p>First you will be ask if you would like to configure your LAN using DHCP. DHCP started for the Dynamic Host Configuration Protocol and it's responsible for automatically handing out IP addresses. I personally did not preconfigure any other DHCP service on my network so I will say no in this situation. If you're not sure you're I would go with no as well.</p> <p></p> <p>Next it will ask you for your LAN IP address. I personally like to use the last IP Address in the subnet as my IP address for my routers and gateway, but you can use any that you like. First, last or somewhere in the middle.</p> <p>This will be the networking scheme I will be using:</p> <ul> <li>IP address: 192.168.100.254</li> <li>Subnet Mask: 255.255.255.0 or 24 bits as it will ask.</li> <li>Gateway: None</li> </ul> <p>The last option it ask if for an upstream gateway. For your LAN you don't have to enter anything here as your WAN interface will be responsible for forwarding your traffic to the internet. you can just press Enter here.</p> <p></p> <p>For IPv6 address LAN interface via WAN tracking I will just accept the defaults.</p> <p></p> <p>For the option to enable the DHCP server on LAN? I will say y. If you went ahead and said no, that's okay as well. It means you will just have to assign your IP address manually but this can be changed later on when we log into the web portal.</p> <p>It will ask for a range of IP addresses. By default a /24 or 255.255.255.0 subnet will give you 254 IP addresses that can be used. Since I'm using 192.168.100.254 as my router LAN IP address my range will be from 192.168.100.1-192.168.100.253.</p> <p>So for the questions - Enter the start address of the IPv4 client address range: I will enter: 192.168.100.1 and for the End IP address I will enter 192.168.100.253</p> <p>Once I'm happy with my choices I will press Enter to proceed. </p> <p></p> <p>For the other Questions:</p> <p>Do you want to change the web GUI protocol from https to http?: no - accept the default Do you want to generate a new self-signed web GUI certificate? : no - I will choose no here, but if you are having certificate issues, you can say yes. Restore web GUI access defaults? - no - You can say yes, if you're having issues with the web GUI.</p> <p></p> <p>Once you're done all of your selections, you can proceed. Opnsense will do another reload to apply the configurations you've just selected.</p> <p>Now let's configure our WAN Interface</p> <p>Select option 2: similar to how we did when we configured the LAN and then select option 2 to configure your WAN interface.</p> <p></p> <p>First question it will ask is if you want to configure your WAN interface to use DHCP. I will say no to maually set my IP address. For my WAN configuration. I will use the following:</p> <ul> <li>IP address - 192.168.50.100</li> <li>Subnet Mask - 255.255.255.0</li> <li>Gateway - 192.168.50.254</li> </ul> <p>Do you want to use the gateway as the IPv4 name server, too? - I will choose n here.</p> <p>For the name server I will use: 1.1.1.1</p> <p>Opnsense will ask you a few questions about configuring the GUI. you can say no to all of these as you won't be logging into the GUI using the WAN IP address. OPNsense by default blocks GUI access through the WAN</p> <p>Configure IPv6 address WAN interface via DHCP6? - no</p> <p>Do you want to change the web GUI protocol from https to http?: no</p> <p>Do you want to generate a new self-signed web GUI certificate? : no</p> <p>Restore web GUI access defaults? - no</p> <p></p> <p>Once again. Opnsense will reload to apply the settings you just configured. </p> <p>At point this, your opnsense router is fully configured to help be the gateway for the new Windows Server Lab we will build. Once again, this is an optional step. you don't have to do this, as you can just use any free IP address to configure your Windows Servers. However, there is still more to be done with our router.</p> <p>If you've made it this far. Thank you for reading. Next up we will start to configure out Windows Servers.</p>"},{"location":"HomeLab/Windows_Projects/Windows_Server_Install/WinSrvInstall/","title":"Windows Server Installation","text":""},{"location":"HomeLab/Windows_Projects/Windows_Server_Install/WinSrvInstall/#windows-server-installation","title":"Windows Server Installation","text":"<p>Welcome to your first hands-on experience with Windows Server if you've never used it before. Here I will be going through the installation process with you to get an idea as to what to look for. We will be installation Windows Server 2022 as it's currently the one I'm most comfortable with. I will going a blog write up of Windows Server 2025 when time permits. </p> <p>First things first. Let's grab a copy of Windows Server 2022. You can find that here: Download Windows Server 2022</p> <p>As with my opnsense router. I will be creating a Virtual Machine using my ESXi server.</p>"},{"location":"HomeLab/Windows_Projects/Windows_Server_Install/WinSrvInstall/#creating-a-virtual-machine-for-windows-server-2022","title":"Creating a Virtual Machine for Windows Server 2022","text":"<p>Click Create/Register VM</p> <p></p> <p>Select Create a new virtual machine and then click NEXT</p> <p>Select a name and guest OS</p> <p>I'm planning on making this server my domain controller so I will call it DC-01. The rest of the details are as follows:</p> <ul> <li>Compatibility: ESXi 8.0 U2 virtual machine</li> <li>Guest OS family: Windows</li> <li>Guest OS Version: Microsoft Windows Server 2022 (64-bit)</li> </ul> <p>Click Next once you're done:</p> <p></p> <p>Next it will ask me where I would like to storae my virtual machine files. I have a few option but I will choose DS2-1TB and then click next:</p> <p></p> <p>Next it will want me to customize my settings. Here's what I want:</p> <ul> <li>CPU - 4 vCPU</li> <li>Memory - 8196MB or 8GB</li> <li>Hard Disk1 - 90GB</li> <li>Network Adapter 1 - PGroup19100 - This network is connected to my opnsense LAN.</li> <li>CD/DVD Drive1 - Select the Windows Server 2022 ISO file.</li> </ul> <p>Once you're done with everything, click Next</p> <p></p> <p>Then Finish</p> <p></p>"},{"location":"HomeLab/Windows_Projects/Windows_Server_Install/WinSrvInstall/#installing-windows-server-2022","title":"Installing Windows Server 2022","text":"<p>Once you're done with the creating the virtual machine. It's time to start it up and install Windows Server</p> <p></p> <p>Press any key to boot from CD or DVDs</p> <p></p> <p>The installation process is fairly simple and straight-forward. First you will be asked the following:</p> <ul> <li>Language to Install - English (United States)</li> <li>Time and currency format - English (United States)</li> <li>Keyboard or input method - US</li> </ul> <p></p> <p>Click Install now to begin the installation</p> <p></p> <p>On the Select the operating system you want to install I will choose Windows Server 2022 Datacenter (Desktop Experience) has a GUI whereas Windows Server 2022 Standard and Windows Server 2022 Datacenter will install the server core version of Windows Server. NOTE: If you install Server Core you cannot enable the GUI experience, you will have to reinstall Windows</p> <p></p> <p>Accept the License terms and agreement and proceed</p> <p></p> <p>For Which type of installation do you want? Choose Custom: Install Microsoft Server Operating System only (advanced) to install a fresh copy of Windows Server.</p> <p></p> <p>Next we're ask Where do you want to install the operating system? I only have one drive available so I will click Next</p> <p></p> <p>Click next will begin the installation process</p> <p></p> <p>Once the installation is completed, it will automatically reboot the System within 10 seconds, you can also, click restart to reboot right away.</p> <p></p>"},{"location":"HomeLab/Windows_Projects/Windows_Server_Install/WinSrvInstall/#windows-server-2022-initial-configuration","title":"Windows Server 2022 Initial Configuration","text":"<p>Once Windows Reboot it will ask you to create an Administrator password. Enter and Re-enter your password and click finish.</p> <p></p> <p>Windows will then then you to the log in screen. Press CTRL+ALT+Delete to bring up the login prompt</p> <p></p> <p>Enter the password you create to log into Windows</p> <p>When I logged in, I'm asked if I want my PC to be discoverable by other PCs, since this is a server I will say no. You might or may not get this prompt.</p> <p></p> <p>Next I am asked if I want to Manage my Windows using Windows Admin Center. I will say Don't show this message again and close it</p> <p></p> <p>Now that I'm in my operating system. they are a few things I would like to do as part of my initial configurations:</p> <ul> <li>Change the Timezone Zone</li> <li>Enable Remote Desktop</li> <li>Change the name</li> <li>Set a Static IP address</li> </ul> <p>Thankfully I can do most of these directly from my Server Manager. I simply click on Local Server below Dashboard to begin:</p> <p></p> <p>First I will change my Timezone, I can click on the link next to Timezone to change this. I will select Eastern Time as my timezone. </p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Next I would like to configure my IP address. Back inside of Server Manager. My Network adapter is called Ehternet0, so I will click on the link next to it to configure my IP address.</p> <p></p> <p>I will use the following IP address for this server:</p> <ul> <li>IP address: 192.168.100.20</li> <li>Subnet Mask: 255.255.255.0</li> <li>Gateway: 192.168.100.254</li> <li>DNS Server: 192.168.100.20</li> <li>DNS Server: 192.168.100.21</li> </ul> <p>After click on the link, you will be bring to your network connections. Right click on your network adapter and click properties</p> <p></p> <p>Then I will click on Internet Protocol Version 4 (TCP/IPv4) and click Properties</p> <p></p> <p>And here I will enter my IP address information</p> <p></p> <p>Once I'm done, I will click OK then click the Properties of Ethernet0 and lastly, I will close to network connections window.</p> <p>From here I will Enable Remote Desktop by clicking on the link next to Remote Desktop </p> <p>Allow Remote Connections to this computer</p> <p>Allow Connections only from computers running Remote Desktop with Network Level Authentication (recommended) - I will uncheck this box as I will be remote into my Server through a computer that is not a part of the Domain.</p> <p>Once I've made from choices I will click Apply then OK</p> <p></p> <p></p> <p>To change the name of my server I will click on the link next to computer name:</p> <p></p> <p>Then I will click on Change</p> <p></p> <p>And enter the name dc-01 as my computer name. My naming scheme comes from what role my server will fulfill. Since this server will be a First Domain Controller it will be called dc-01.</p> <p></p> <p>Once I am done it will tell me that I need to reboot to apply the changes and will give me to option to reboot now or later. I will reboot now.</p> <p></p> <p></p> <p></p> <p>This is basically how I will be creating all of my Windows Servers. Usually in my production environment I will have a License key to use but since I'm doing this in my homelab that will be blown away after I'm done, it's not currently needed. The only things I will change will be the Computer Name and the IP Address. </p> <p>Installing the Windows Server operating system is really just to first step. Currently you just have a Computer, it currently doesn't server an purpose but we will change that when we start adding different roles and features to our Servers.</p> <p>My next step will be to install the Active Directory Role on my new DC-01 Server.</p>"},{"location":"blog/","title":"Welcome","text":""},{"location":"blog/#welcome-to-my-blog","title":"Welcome to my Blog!","text":""},{"location":"blog/posts/firstp/","title":"Project 1","text":""},{"location":"blog/posts/firstp/#this-is-my-first-project","title":"This is my first project.","text":"<p>With this Project I will attempt to create a Windows labs.</p>"}]}